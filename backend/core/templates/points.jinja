{% extends "base.jinja" %}




{% macro add_page_navigator() %}
    <!-- Page Navigator -->
    <div class="page-navigator">
        {# First Page Button #}
        <a onclick="goToPage(1)"><<<</a>

        {# Previous Button #}
        {% if current_page <= 1 %}
            <span><<</span>
        {% else %}
            <a onclick="goToPage({{ current_page - 1 }})"><<</a>
        {% endif %}

        {% if current_page > 4 %}
            <span>...</span>
        {% endif %}

        {# Page Number Buttons #}
        {% for page_num in range(1, max_pages + 1) %}
            {% if page_num >= current_page - 3 and page_num <= current_page + 3 %}
                {% if page_num == current_page %}
                    <strong>{{ page_num }}</strong>
                {% else %}
                    <a onclick="goToPage({{ page_num }})">{{ page_num }}</a>
                {% endif %}
            {% elif page_num == 1 or page_num == max_pages %}
                {% if page_num == 1 and current_page <= 4 %}
                    <a onclick="goToPage(1)">1</a>
                    <span>...</span>
                {% elif page_num == max_pages and current_page >= max_pages - 3 %}
                    <span>...</span>
                    <a onclick="goToPage({{ max_pages }})">{{ max_pages }}</a>
                {% endif %}
            {% endif %}
        {% endfor %}

        {% if current_page < max_pages - 3 %}
            <span>...</span>
        {% endif %}

        {# Next Button #}
        {% if current_page >= max_pages %}
            <span>>></span>
        {% else %}
            <a onclick="goToPage({{ current_page + 1 }})">>></a>
        {% endif %}

        {# Last Page Button #}
        <a onclick="goToPage({{ max_pages }})">>>></a>
    </div>
{% endmacro %}




{% block heading %}
Points Overview
{% endblock %}

{% block head %}
<style>
    .page-navigator {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
    }

    .page-navigator a {
        text-decoration: underline !important;
        cursor: pointer;
    }

    .page-navigator a:hover {
        text-decoration: none !important;
    }
</style>
{% endblock %}

{% block content %}

<div class="container mt-4">
    <!-- Single Date Selector (same as before) -->
    <div class="date-selector" style="display: flex; gap: 10px; justify-content: center; align-items: center; margin-bottom: 20px;">
        <button onclick="adjustDate(-1)">&lt;&lt;</button>
        <input type="date" id="date-input" onchange="submitDate(this.value)" />
        <button onclick="adjustDate(1)">&gt;&gt;</button>
        <button onclick="setDateRange('today')">Today</button>
        <button onclick="setDateRange('yesterday')">Yesterday</button>
        {# a selector from "imports" list variable #}
        <select onchange="submitImport(this.value)">
            <option value="">Select Import</option>
            {% for imp in imports %}
                <option value="{{ imp.id }}" {% if request.args.get('importid') == imp.id|string %}selected{% endif %}>{{ imp.name }}</option>
            {% endfor %}
        </select>
    </div>

    <!-- Hidden form to submit GET params for date selection -->
    <form method="get" id="date-form" style="display: none;">
        <input type="hidden" name="date" id="hidden-date-input" />
    </form>

    <!-- Wrap the table in a single POST form for batch delete -->
    <form method="POST" action="{{ url_for('web.points', date=request.args.get('date', ''), importid=request.args.get('importid', ''), per_page=per_page, page=current_page ) }}">
        <input type="hidden" name="action" value="batch_delete">

        <!-- Submit button to delete all selected points -->
        <div class="pagination-controls" style="display: flex; justify-content: space-between; align-items: center; margin-top: 20px; flex-wrap: wrap;">
                <button type="submit">Delete Selected</button>

                <!-- Page Navigator -->
                {{ add_page_navigator() }}
                
            </div>
        </div>
        <br>

        <table border="1" cellpadding="5" cellspacing="0">
            <thead>
                <tr>
                    <th>
                        <!-- "Select All" checkbox -->
                        <input type="checkbox" id="select-all" />
                    </th>
                    <th>Timestamp</th>
                    <th>Latitude</th>
                    <th>Longitude</th>
                    <th>Speed (m/s)</th>
                    {# <th>Actions</th> #}
                </tr>
            </thead>
            <tbody>
                {% if points %}
                    {% for point in points %}
                    <tr>
                        <td>
                            <!-- Checkbox for each row -->
                            <input type="checkbox" name="selected_points" value="{{ point.id }}">
                        </td>
                        {% set date, _ = point.timestamp.split(' ') %}
                        <td><a href="{{ url_for('web.map') }}?point_id={{ point.id }}&start_date={{ date }}&end_date={{ date }}">{{ point.timestamp }}</a></td>
                        <td>{{ point.latitude }}</td>
                        <td>{{ point.longitude }}</td>
                        <td>{{ point.speed }}</td>
                    </tr>
                    {% endfor %}
                {% else %}
                    <tr><td colspan="6">No points found for this date.</td></tr>
                {% endif %}
            </tbody>
        </table>
    </form>

    <!-- Pagination Controls -->
    <div class="pagination-controls" style="display: flex; justify-content: space-between; align-items: center; margin-top: 20px; flex-wrap: wrap;">
        <!-- Per-Page Selector -->
        <div class="per-page-selector" style="margin-bottom: 10px;">
            <label for="per-page">Points per page:</label>
            <select id="per-page" onchange="changePerPage(this.value)">
                <option value="10" {% if per_page == 10 %}selected{% endif %}>10</option>
                <option value="20" {% if per_page == 20 %}selected{% endif %}>20</option>
                <option value="50" {% if per_page == 50 %}selected{% endif %}>50</option>
                <option value="150" {% if per_page == 150 %}selected{% endif %}>150</option>
            </select>
        </div>

        <!-- Page Navigator -->
        {{ add_page_navigator() }}
        
    </div>
</div>

<script>
function submitDate(dateString) {
    updateQueryParams({ date: dateString, page: 1 }); // Reset to page 1 on date change
}

function submitImport(importId) {
    updateQueryParams({ importid: importId, page: 1 }); // Reset to page 1 on import change
}

function adjustDate(days) {
    const dateInput = document.getElementById("date-input");
    let currentDate = new Date(dateInput.value);
    if (isNaN(currentDate.getTime())) {
        currentDate = new Date();
    }
    currentDate.setDate(currentDate.getDate() + days);
    submitDate(currentDate.toISOString().split('T')[0]);
}

function setDateRange(range) {
    let today = new Date();
    let chosenDate;

    if (range === 'today') {
        chosenDate = today;
    } else if (range === 'yesterday') {
        chosenDate = new Date(today);
        chosenDate.setDate(chosenDate.getDate() - 1);
    } else {
        chosenDate = today;
    }
    submitDate(chosenDate.toISOString().split('T')[0]);
}

// Handle per-page change
function changePerPage(perPage) {
    updateQueryParams({ per_page: perPage, page: 1 }); // Reset to page 1 on per_page change
}

// Handle page navigation
function goToPage(pageNum) {
    updateQueryParams({ page: pageNum });
}

// Utility function to update query parameters and reload
function updateQueryParams(params) {
    const urlParams = new URLSearchParams(window.location.search);

    for (const key in params) {
        if (params[key] !== null && params[key] !== undefined && params[key] !== '') {
            urlParams.set(key, params[key]);
        } else {
            urlParams.delete(key);
        }
    }

    window.location.search = urlParams.toString();
}

// "Select All" checkbox logic
document.addEventListener("DOMContentLoaded", () => {
    const urlParams = new URLSearchParams(window.location.search);
    const dateParam = urlParams.get("date");
    const dateInput = document.getElementById("date-input");

    if (dateParam) {
        dateInput.value = dateParam;
    } else {
        // Default to today's date
        let now = new Date();
        dateInput.value = now.toISOString().split('T')[0];
    }

    const selectAllCheckbox = document.getElementById("select-all");
    selectAllCheckbox.addEventListener('change', function() {
        const checkboxes = document.querySelectorAll('input[name="selected_points"]');
        checkboxes.forEach(cb => {
            cb.checked = selectAllCheckbox.checked;
        });
    });
});
</script>
{% endblock %}
